{"ast":null,"code":"var _jsxFileName = \"/home/kristaps/Restes_react/src/Components/IstabasAttels.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const IstabasAttels = ({\n  source1,\n  source2,\n  alt,\n  styleProps\n}) => {\n  _s();\n\n  const [hovered, setHovered] = useState(false);\n  const STYLE = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    style: { ...styleProps\n    },\n    onmouseover: () => setHovered(true),\n    onmouseout: () => setHovered(false),\n    src: hovered ? source2 : source1,\n    alt: alt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IstabasAttels, \"V8YbV+gTZxGliGj1g0fftBlvsq4=\");\n\n_c = IstabasAttels;\n\nvar _c;\n\n$RefreshReg$(_c, \"IstabasAttels\");","map":{"version":3,"sources":["/home/kristaps/Restes_react/src/Components/IstabasAttels.js"],"names":["React","useState","IstabasAttels","source1","source2","alt","styleProps","hovered","setHovered","STYLE","display","flexDirection","alignItems","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA,GAApB;AAAyBC,EAAAA;AAAzB,CAAD,KAA2C;AAAA;;AACtE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMQ,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,aAAa,EAAE,QAFH;AAGZC,IAAAA,UAAU,EAAE,YAHA;AAIZC,IAAAA,cAAc,EAAE;AAJJ,GAAd;AAOA,sBACE;AACE,IAAA,KAAK,EAAE,EAAE,GAAGP;AAAL,KADT;AAEE,IAAA,WAAW,EAAE,MAAME,UAAU,CAAC,IAAD,CAF/B;AAGE,IAAA,UAAU,EAAE,MAAMA,UAAU,CAAC,KAAD,CAH9B;AAIE,IAAA,GAAG,EAAED,OAAO,GAAGH,OAAH,GAAaD,OAJ3B;AAKE,IAAA,GAAG,EAAEE;AALP;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlBM;;GAAMH,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\n\n\nexport const IstabasAttels = ({ source1, source2, alt, styleProps }) => {\n  const [hovered, setHovered] = useState(false);\n  const STYLE = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  };\n\n  return (\n    <img\n      style={{ ...styleProps }}\n      onmouseover={() => setHovered(true)}\n      onmouseout={() => setHovered(false)}\n      src={hovered ? source2 : source1}\n      alt={alt}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}